1.	Что такое CRUD?
-- -- --
CRUD - это сокращение от четырех функций, которые являются принципами создания программ для работы с базами данных:
CREATE - создание / команда INSERT (post запрос)
READ - чтение / команда SELECT (get запрос)
UPDATE - обновление / команда UPDATE (put/patch запрос)
DELETE - удаление / команда DELETE (delete запрос)


2.	Что такое CRUD-приложение?
-- -- --
Приложение, которое обеспечивает 4 главных операции при работе с сущностями баз данных.


3.	Требуется endpoint для отображения информации о конкретном клиенте.
-- -- --
Как будет выглядеть URL для данного endpoint? С помощью чего легче описать данный endpoint?
URL - /users/{userId}.
Данный URL легче описать с помощью аннотации @PathVariable, т.к. нам не нужно будет описывать для каждого клиента запрос отдельно.
А в url будет подставляться значение полученное из строки запроса.

4.	Необходимо передать на сервер набор некоторых значений для получения некоторой информации.
Как это будет реализовано в контроллере?
-- -- --
Будет использоваться объект класса репозитория, один из методов которого будет принимать все необходимые параметры переменных.


5.	Необходимо передать на сервер запрос на регистрацию пользователя.
Как это будет реализовано в контроллере?
-- -- --
В контроллере создается объект пользователя с установлением всех переданных значений полей.
Затем объект пользователя передается в объект класса репозитория по работе с таблицей пользователей в базе данных.


6.	Для чего нужна аннотация @SpringBootApplication?
-- -- --
@SpringBootApplication – объединяет в себе другие аннотации(ComponentScan, EnableAutoConfiguration, SpringBootConfiguration),
необходимые для автоконфигурации проекта - автоматического создания и настройки бинов, необходимых для работы приложения.

7.	Будет ли работать Spring приложение без @SpringBootApplication?
-- -- --
Возможно, если произвести создание и настройки всех необходимых классов, которые настраивает Spring автоматически,
имея аннотацию SpringBootApplication.

8.	Что такое автоконфигурация и стартер?
-- -- --
Автоконфигурация - автоматическое создание и настройка бинов, которые необходимы для работы приложения.
Стартер - стартовый набор библиотек(зависимостей), необходимых для начальной настройки и работы приложения.


9.	Почему не нужно настраивать веб и Tomcat в Spring Boot?
-- -- --
Т.к. tomcat же встроен в SpringBoot, а веб настройки подключены в виде зависимостей в стартарею


10.	Какие основные преимущества Spring Boot перед обычным Spring приложением?
-- -- --
В Spring Boot повторяющаяся конфигурация выносится в стартеры.
Раньше нужно было всегда самостоятельно настраивать Web, Thymeleaf, JPA/Hibernate.
В SpringBoot требуется не настройка, а всего лишь подключение стартеров.


11.	Требуется добавить в проект зависимость JPA. Как правильно это сделать в Spring Boot?
-- -- --
Необходимо добавить модуль:
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-data-jpa</artifactId>
</dependency>


12.	Требуется добавить в проект специфическую библиотеку. Как правильно это сделать в Spring Boot?
-- -- --
Необходимо добавить модуль:
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>${jackson.version}</version>
</dependency>

а в теге настроек добавить:
<properties>
    <jackson.version>2.14.1</jackson.version>
</properties>

